// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  username        String          @unique
  email           String          @unique
  password        String
  isActive        Boolean         @default(true)
  createdAt       DateTime        @default(now())
  ViagensMarcadas ViagemMarcada[]

  @@unique([id, isActive])
  @@unique([email, isActive])
  @@unique([username, isActive])
}

model Viacao {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  cnpj      String   @unique
  imagemUrl String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  linhas    Linha[]
  viagem    Viagem[]

  @@unique([id, isActive])
  @@unique([cnpj, isActive])
}

model Linha {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  viacaoId  String
  pontoA    String
  pontoB    String
  valor     Float
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  viacao    Viacao    @relation(fields: [viacaoId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  horarios  Horario[]

  @@unique([id, isActive])
  @@unique([viacaoId, isActive])
}

model Horario {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  linhaId   String
  horario   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  linha     Linha    @relation(fields: [linhaId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([id, isActive])
}

model Viagem {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  viacaoId        String
  destino         String
  data            DateTime
  dataAntiga      DateTime
  horario         String
  horarioAntigo   String
  valor           Float
  valorAntigo     Float
  imagemUrl       String
  isActive        Boolean         @default(true)
  createdAt       DateTime        @default(now())
  viacao          Viacao          @relation(fields: [viacaoId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  ViagensMarcadas ViagemMarcada[]

  @@unique([id, isActive])
}

model ViagemMarcada {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  usuarioId String
  viagemId  String
  createdAt DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  viagem    Viagem   @relation(fields: [viagemId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([usuarioId, viagemId])
}
